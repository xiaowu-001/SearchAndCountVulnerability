import wx
import os
import sys
import WebsIteHandle.Config_Setting as UserConfig
import base.FileOperation as FileOperation
import WebsIteHandle.WebsiteHandle as WebsiteHandle


class CMainUIBase(wx.Panel):

    btn_STARTUP_CVE = None
    btn_STARTUP_NVD = None
    btn_STARTUP_CNVD = None
    btn_STARTUP_CNNVD = None
    btn_STARTUP_CVE_BYXML = None
    btn_STARTUP_NVD_BYJSON = None

    _m_FOSS_pathexcel = None
    _m_OSSvul_pathexcel = None

    _m_CVE_OSS_PATH = None
    _m_NVD_OSS_PATH = None
    _m_CNVD_OSS_PATH = None
    _m_CNNVD_OSS_PATH = None

    btn_open_FOSSexcel = None
    btn_open_OSSVulexcel = None

    btn_open_CVEpath = None
    btn_open_NVDpath = None
    btn_open_CNVDpath = None
    btn_open_CNNVDpath = None
    btn_run = None

    def __init__(self, parent):
        wx.Panel.__init__(self, parent)
        self._initUIFGS()
        self._2ndInit()

    def _2ndInit(self):
        pass

    def _initUIFGS(self):
        hbox = wx.BoxSizer(wx.HORIZONTAL)
        fgs = wx.FlexGridSizer(16, 4, 10, 10)

        STARTUP_CVE_NAME = wx.StaticText(self, label='搜索CVE开关: ', style=wx.ALIGN_RIGHT)
        self.btn_STARTUP_CVE = wx.Button(self, label="close")
        self.btn_STARTUP_CVE.Bind(wx.EVT_BUTTON, self._opencloseCVE)
        STARTUP_NVD_NAME = wx.StaticText(self, label='搜索NVD开关: ', style=wx.ALIGN_RIGHT)
        self.btn_STARTUP_NVD = wx.Button(self, label="close")
        self.btn_STARTUP_NVD.Bind(wx.EVT_BUTTON, self._opencloseNVD)
        STARTUP_CNVD_NAME = wx.StaticText(self, label='搜索CNVD开关: ', style=wx.ALIGN_RIGHT)
        self.btn_STARTUP_CNVD = wx.Button(self, label="close")
        self.btn_STARTUP_CNVD.Bind(wx.EVT_BUTTON, self._opencloseCNVD)
        STARTUP_CNNVD_NAME = wx.StaticText(self, label='搜索CNNVD开关: ', style=wx.ALIGN_RIGHT)
        self.btn_STARTUP_CNNVD = wx.Button(self, label="close")
        self.btn_STARTUP_CNNVD.Bind(wx.EVT_BUTTON, self._opencloseCNNVD)
        STARTUP_CVE_BYXML_NAME = wx.StaticText(self, label='搜索CVEbyxml开关: ', style=wx.ALIGN_RIGHT)
        self.btn_STARTUP_CVE_BYXML = wx.Button(self, label="close")
        self.btn_STARTUP_CVE_BYXML.Bind(wx.EVT_BUTTON, self._opencloseCVEbyxml)
        STARTUP_NVD_BYJSON_NAME = wx.StaticText(self, label='搜索NVDbyjson开关: ', style=wx.ALIGN_RIGHT)
        self.btn_STARTUP_NVD_BYJSON = wx.Button(self, label="close")
        self.btn_STARTUP_NVD_BYJSON.Bind(wx.EVT_BUTTON, self._opencloseNVDbyjson)

        foss_path_excel_label = wx.StaticText(self, label='FOSS Excel Path: ')
        self._m_FOSS_pathexcel = wx.TextCtrl(self, style=wx.TE_READONLY)
        oss_path_excel_label = wx.StaticText(self, label='OSS Excel Path: ')
        self._m_OSSvul_pathexcel = wx.TextCtrl(self, style=wx.TE_READONLY)

        cve_path_label = wx.StaticText(self, label='CVE OSS Path: ')
        self._m_CVE_OSS_PATH = wx.TextCtrl(self, style=wx.TE_READONLY)
        nvd_path_label = wx.StaticText(self, label='NVD OSS Path: ')
        self._m_NVD_OSS_PATH = wx.TextCtrl(self, style=wx.TE_READONLY)
        cnvd_path_label = wx.StaticText(self, label='CNVD OSS Path: ')
        self._m_CNVD_OSS_PATH = wx.TextCtrl(self, style=wx.TE_READONLY)
        cnnvd_path_label = wx.StaticText(self, label='CNNVD OSS Path: ')
        self._m_CNNVD_OSS_PATH = wx.TextCtrl(self, style=wx.TE_READONLY)

        log_label = wx.StaticText(self, label='Log: ')
        # self._m_logText = wx.TextCtrl(self, style=wx.TE_MULTILINE | wx.HSCROLL | wx.TE_READONLY)
        self._m_logText = wx.TextCtrl(self, style=wx.TE_MULTILINE | wx.HSCROLL)

        self.btn_open_FOSSexcel = wx.Button(self, label="Open FOSSExcel")
        self.btn_open_FOSSexcel.Bind(wx.EVT_BUTTON, self._openFOSSExcel)
        self.btn_open_OSSVulexcel = wx.Button(self, label="Open OSSExcel")
        self.btn_open_OSSVulexcel.Bind(wx.EVT_BUTTON, self._openOSSExcel)

        self.btn_open_CVEpath = wx.Button(self, label="Open CVE file")
        self.btn_open_CVEpath.Bind(wx.EVT_BUTTON, lambda evt, mark = 1:self._openOSSfolder(evt, mark), self.btn_open_CVEpath)
        self.btn_open_NVDpath = wx.Button(self, label="Open NVD file")
        self.btn_open_NVDpath.Bind(wx.EVT_BUTTON, lambda evt, mark = 2:self._openOSSfolder(evt, mark), self.btn_open_NVDpath)
        self.btn_open_CNVDpath = wx.Button(self, label="Open CNVD file")
        self.btn_open_CNVDpath.Bind(wx.EVT_BUTTON, lambda evt, mark=3: self._openOSSfolder(evt, mark), self.btn_open_CNVDpath)
        self.btn_open_CNNVDpath = wx.Button(self, label="Open CNNVD file")
        self.btn_open_CNNVDpath.Bind(wx.EVT_BUTTON, lambda evt, mark=4: self._openOSSfolder(evt, mark), self.btn_open_CNNVDpath)

        self.btn_run = wx.Button(self, label="Run")
        self.btn_run.Bind(wx.EVT_BUTTON, self._Run)

        # title = wx.StaticText(self, label = "Title")
        # author = wx.StaticText(self, label = "Name of the Author")
        # review = wx.StaticText(self, label = "Review")
        # tc1 = wx.TextCtrl(self)
        # tc2 = wx.TextCtrl(self)
        # tc3 = wx.TextCtrl(self, style = wx.TE_MULTILINE)
        fgs.AddMany([(STARTUP_CVE_NAME), (self.btn_STARTUP_CVE),(STARTUP_NVD_NAME), (self.btn_STARTUP_NVD),
                     (STARTUP_CNVD_NAME),(self.btn_STARTUP_CNVD),(STARTUP_CNNVD_NAME),(self.btn_STARTUP_CNNVD),
                     (STARTUP_CVE_BYXML_NAME),(self.btn_STARTUP_CVE_BYXML),(STARTUP_NVD_BYJSON_NAME), (self.btn_STARTUP_NVD_BYJSON),
                     (foss_path_excel_label), (self._m_FOSS_pathexcel,1, wx.EXPAND), (wx.StaticText(self, label='')),(wx.StaticText(self, label='')),
                     (oss_path_excel_label), (self._m_OSSvul_pathexcel,1, wx.EXPAND),(wx.StaticText(self, label='')),(wx.StaticText(self, label='')),
                     (cve_path_label), (self._m_CVE_OSS_PATH, 1, wx.EXPAND),(wx.StaticText(self, label='')),(wx.StaticText(self, label='')),
                     (nvd_path_label), (self._m_NVD_OSS_PATH, 1, wx.EXPAND),(wx.StaticText(self, label='')),(wx.StaticText(self, label='')),
                     (cnvd_path_label), (self._m_CNVD_OSS_PATH, 1, wx.EXPAND),(wx.StaticText(self, label='')),(wx.StaticText(self, label='')),
                     (cnnvd_path_label), (self._m_CNNVD_OSS_PATH, 1, wx.EXPAND),(wx.StaticText(self, label='')),(wx.StaticText(self, label='')),
                     (log_label), (self._m_logText, 1, wx.EXPAND),(wx.StaticText(self, label='')),(wx.StaticText(self, label='')),
                     (self.btn_open_CVEpath), (self.btn_open_NVDpath),(self.btn_open_CNVDpath), (self.btn_open_CNNVDpath),
                     (self.btn_open_FOSSexcel), (self.btn_open_OSSVulexcel), (self.btn_run)])
        fgs.AddGrowableRow(9, 1) #指定log行适配屏幕大小
        fgs.AddGrowableCol(1, 1)
        hbox.Add(fgs, proportion=2, flag=wx.ALL | wx.EXPAND, border=10)
        self.SetSizer(hbox)


    def _opencloseCVE(self, event):
        if "open" in self.btn_STARTUP_CVE.GetLabel():
            self.btn_STARTUP_CVE.SetLabel("close")
            UserConfig.STARTUP_CVE = bool(0)
        else:
            self.btn_STARTUP_CVE.SetLabel("open")
            UserConfig.STARTUP_CVE = bool(1)
        self._addLogText("CVE开关状态：" + self.btn_STARTUP_CVE.GetLabel())


    def _opencloseNVD(self, event):
        if "open" in self.btn_STARTUP_NVD.GetLabel():
            self.btn_STARTUP_NVD.SetLabel("close")
            UserConfig.STARTUP_NVD = bool(0)
        else:
            self.btn_STARTUP_NVD.SetLabel("open")
            UserConfig.STARTUP_NVD = bool(1)
        self._addLogText("NVD开关状态：" + self.btn_STARTUP_NVD.GetLabel())

    def _opencloseCNVD(self, event):
        if "open" in self.btn_STARTUP_CNVD.GetLabel():
            self.btn_STARTUP_CNVD.SetLabel("close")
            UserConfig.STARTUP_CNVD = bool(0)
        else:
            self.btn_STARTUP_CNVD.SetLabel("open")
            UserConfig.STARTUP_CNVD = bool(1)
        self._addLogText("CNVD开关状态：" + self.btn_STARTUP_CNVD.GetLabel())

    def _opencloseCNNVD(self, event):
        if "open" in self.btn_STARTUP_CNNVD.GetLabel():
            self.btn_STARTUP_CNNVD.SetLabel("close")
            UserConfig.STARTUP_CNNVD = bool(0)
        else:
            self.btn_STARTUP_CNNVD.SetLabel("open")
            UserConfig.STARTUP_CNNVD = bool(1)
        self._addLogText("CNNVD开关状态：" + self.btn_STARTUP_CNNVD.GetLabel())

    def _opencloseCVEbyxml(self, event):
        if "open" in self.btn_STARTUP_CVE_BYXML.GetLabel():
            self.btn_STARTUP_CVE_BYXML.SetLabel("close")
            UserConfig.STARTUP_CVE_BYXML = bool(0)
        else:
            self.btn_STARTUP_CVE_BYXML.SetLabel("open")
            UserConfig.STARTUP_CVE_BYXML = bool(1)
        self._addLogText("CVEBYXML开关状态：" + self.btn_STARTUP_CVE_BYXML.GetLabel())

    def _opencloseNVDbyjson(self, event):
        if "open" in self.btn_STARTUP_NVD_BYJSON.GetLabel():
            self.btn_STARTUP_NVD_BYJSON.SetLabel("close")
            UserConfig.STARTUP_NVD_BYJSON = bool(0)
        else:
            self.btn_STARTUP_NVD_BYJSON.SetLabel("open")
            UserConfig.STARTUP_NVD_BYJSON = bool(1)
        self._addLogText("NVDBYJSON开关状态：" + self.btn_STARTUP_NVD_BYJSON.GetLabel())

    def _openFOSSExcel(self, event):
        wildcard = 'All files(*.*)|*.*'
        dialog = wx.FileDialog(None, 'select', os.getcwd(), '', wildcard, wx.FD_OPEN)
        if dialog.ShowModal() == wx.ID_OK:
            self._m_FOSS_pathexcel.SetValue(dialog.GetPath())
            UserConfig.FOSSFILE_PATH = dialog.GetPath().replace('\\', '/')
            self._addLogText(UserConfig.FOSSFILE_PATH)
            dialog.Destroy

    def _openOSSExcel(self, event):
        wildcard = 'All files(*.*)|*.*'
        dialog = wx.FileDialog(None, 'select', os.getcwd(), '', wildcard, wx.FD_OPEN)
        if dialog.ShowModal() == wx.ID_OK:
            self._m_OSSvul_pathexcel.SetValue(dialog.GetPath())
            UserConfig.OSSVULFILE_PATH = dialog.GetPath().replace('\\', '/')
            self._addLogText(UserConfig.OSSVULFILE_PATH)
            dialog.Destroy

    def _openOSSfolder(self, event, mark):
        # wildcard = 'All files(*.*)|*.*'
        dialog = wx.DirDialog(self, message="choose a folder")
        if dialog.ShowModal() == wx.ID_OK:
            if mark == 1:
                self._m_CVE_OSS_PATH.SetValue(dialog.GetPath())
                UserConfig.CVE_DIRECTORY_PATH = dialog.GetPath().replace('\\', '/') + "/"
                self._addLogText(UserConfig.CVE_DIRECTORY_PATH)
            elif mark == 2:
                self._m_NVD_OSS_PATH.SetValue(dialog.GetPath())
                UserConfig.NVD_DIRECTORY_PATH = dialog.GetPath().replace('\\', '/') + "/"
                self._addLogText(UserConfig.NVD_DIRECTORY_PATH)
            elif mark == 3:
                self._m_CNVD_OSS_PATH.SetValue(dialog.GetPath())
                UserConfig.CNVD_DIRECTORY_PATH = dialog.GetPath().replace('\\', '/') + "/"
                self._addLogText(UserConfig.CNVD_DIRECTORY_PATH)
            elif mark == 4:
                self._m_CNNVD_OSS_PATH.SetValue(dialog.GetPath())
                UserConfig.CNNVD_DIRECTORY_PATH = dialog.GetPath().replace('\\', '/') + "/"
                self._addLogText(UserConfig.CNNVD_DIRECTORY_PATH)
            dialog.Destroy

    def _disablebutton(self):
        self.btn_run.Disable()
        self.btn_open_CNNVDpath.Disable()
        self.btn_open_CNVDpath.Disable()
        self.btn_STARTUP_CVE.Disable()
        self.btn_STARTUP_NVD.Disable()
        self.btn_open_NVDpath.Disable()
        self.btn_open_CVEpath.Disable()
        self.btn_open_OSSVulexcel.Disable()
        self.btn_open_FOSSexcel.Disable()
        self.btn_STARTUP_CNNVD.Disable()
        self.btn_STARTUP_CNVD.Disable()
        self.btn_STARTUP_CVE_BYXML.Disable()
        self.btn_STARTUP_NVD_BYJSON.Disable()

    def _enablebutton(self):
        self.btn_run.Enable()
        self.btn_open_CNNVDpath.Enable()
        self.btn_open_CNVDpath.Enable()
        self.btn_STARTUP_CVE.Enable()
        self.btn_STARTUP_NVD.Enable()
        self.btn_open_NVDpath.Enable()
        self.btn_open_CVEpath.Enable()
        self.btn_open_OSSVulexcel.Enable()
        self.btn_open_FOSSexcel.Enable()
        self.btn_STARTUP_CNNVD.Enable()
        self.btn_STARTUP_CNVD.Enable()
        self.btn_STARTUP_CVE_BYXML.Enable()
        self.btn_STARTUP_NVD_BYJSON.Enable()

    def _Run(self, event):
        self.btn_run.SetLabel("Stop")
        self._disablebutton()
        if UserConfig.FOSSFILE_PATH.endswith('.xlsx') and UserConfig.OSSVULFILE_PATH.endswith('.xlsx'):
            lib_name = UserConfig.FOSSFILE_PATH
            list = FileOperation.readlibname(lib_name)
            # print(list)

            # 1 begin将下载的CNNVD数据写入漏洞管理模板中
            if UserConfig.STARTUP_CNNVD:
                WebsiteHandle.DealCNNVDData(list)
                self._addLogText("完成CNNVD检索")
            # end将下载的CNNVD数据写入漏洞管理模板中

            # 2 begin将下载xml的CNVD数据写入漏洞管理模板中
            if UserConfig.STARTUP_CNVD:
                WebsiteHandle.DealCNVDData(list)
                self._addLogText("完成CNVD检索")
            # 2 end将下载xml的CNVD数据写入漏洞管理模板中

            # 3 search NVD begin
            if UserConfig.STARTUP_NVD:
                WebsiteHandle.DealNVDData(list)
                self._addLogText("完成NVD检索")
            # search NVD end

            # 4 search CVE begin
            if UserConfig.STARTUP_CVE:
                WebsiteHandle.DealCVEData(list)
                self._addLogText("完成CVE检索")
            # search CVE end

            # 5 search CVE_BYXML begin
            if UserConfig.STARTUP_CVE_BYXML:
                WebsiteHandle.DealCVEData_ByXML(list)
                self._addLogText("完成CVEBYXML检索")
            # search CVE end

            # 6 search NVD_BYJSON begin
            if UserConfig.STARTUP_NVD_BYJSON:
                WebsiteHandle.DealNVDData_ByJSON(list)
                self._addLogText("完成NVDBYJSON检索")
            # search NVD end
        else:
            self._addLogText(UserConfig.FOSSFILE_PATH + " 或" + UserConfig.OSSVULFILE_PATH  + "不是可执行文件")
        self._addLogText("完成检索")
        self._enablebutton()
        self.btn_run.SetLabel("Run")

    def _addLogText(self, logContent):
        self._m_logText.SetValue(self._m_logText.GetValue() + '\n' + logContent)

    def _clearLogText(self):
        self._m_logText.SetValue('')

    # def _operateExcel(self, _excelPath):
    #     self._m_DoExcel = CDoExcel(_excelPath)

