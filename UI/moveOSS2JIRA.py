import wx
import os
import sys
import WebsIteHandle.Config_Setting as UserConfig
import base.FileOperation as FileOperation
import WebsIteHandle.WebsiteHandle as WebsiteHandle


class movefileUIBase(wx.Panel):
    _m_OSSVUL_pathexcel = None
    _m_EXCEL2JIRA_pathexcel = None
    _m_logText =None
    _m_assigne = None

    btn_open_OSSVULexcel = None
    btn_open_EXCEL2JIRAexcel = None

    btn_run = None

    def __init__(self, parent):
        wx.Panel.__init__(self, parent)
        self._initUIFGS()
        self._2ndInit()

    def _2ndInit(self):
        pass

    def _initUIFGS(self):
        hbox = wx.BoxSizer(wx.HORIZONTAL)
        fgs = wx.FlexGridSizer(6, 2, 10, 10)

        ossvul_path_excel_label = wx.StaticText(self, label='OSS VUL Excel Path: ')
        self._m_OSSvul_pathexcel = wx.TextCtrl(self, style=wx.TE_READONLY)
        excel2jira_path_excel_label = wx.StaticText(self, label=' Excel 2 JIRA Path: ')
        self._m_EXCEL2JIRA_pathexcel = wx.TextCtrl(self, style=wx.TE_READONLY)
        excel2jira_assigne_label = wx.StaticText(self, label='Assigne to(填简写): ')
        self._m_assigne = wx.TextCtrl(self)

        log_label = wx.StaticText(self, label='Log: ')
        # self._m_logText = wx.TextCtrl(self, style=wx.TE_MULTILINE | wx.HSCROLL | wx.TE_READONLY)
        self._m_logText = wx.TextCtrl(self, style=wx.TE_MULTILINE | wx.HSCROLL)

        self.btn_open_OSSVULexcel = wx.Button(self, label="Open OSSVULExcel")
        self.btn_open_OSSVULexcel.Bind(wx.EVT_BUTTON, self._openOSSVULExcel)
        self.btn_open_EXCEL2JIRAexcel = wx.Button(self, label="Open Excel2JIRA Excel")
        self.btn_open_EXCEL2JIRAexcel.Bind(wx.EVT_BUTTON, self._openExcel2JIRAExcel)

        self.btn_run = wx.Button(self, label="Run")
        self.btn_run.Bind(wx.EVT_BUTTON, self._Run)

        # title = wx.StaticText(self, label = "Title")
        # author = wx.StaticText(self, label = "Name of the Author")
        # review = wx.StaticText(self, label = "Review")
        # tc1 = wx.TextCtrl(self)
        # tc2 = wx.TextCtrl(self)
        # tc3 = wx.TextCtrl(self, style = wx.TE_MULTILINE)
        fgs.AddMany([(ossvul_path_excel_label), (self._m_OSSvul_pathexcel,1, wx.EXPAND),
                     (excel2jira_path_excel_label), (self._m_EXCEL2JIRA_pathexcel, 1, wx.EXPAND),
                     (excel2jira_assigne_label), (self._m_assigne, 1, wx.EXPAND),
                     (log_label), (self._m_logText, 1, wx.EXPAND),
                     (self.btn_open_OSSVULexcel), (self.btn_open_EXCEL2JIRAexcel), (self.btn_run)])
        fgs.AddGrowableRow(3, 1) #指定log行适配屏幕大小
        fgs.AddGrowableCol(1, 1)
        hbox.Add(fgs, proportion=2, flag=wx.ALL | wx.EXPAND, border=10)
        self.SetSizer(hbox)

    def _openExcel2JIRAExcel(self, event):
        wildcard = 'All files(*.*)|*.*'
        dialog = wx.FileDialog(None, 'select', os.getcwd(), '', wildcard, wx.FD_OPEN)
        if dialog.ShowModal() == wx.ID_OK:
            self._m_EXCEL2JIRA_pathexcel.SetValue(dialog.GetPath())
            UserConfig.EXCEL2JIRA_PATH = dialog.GetPath().replace('\\', '/')
            self._addLogText(UserConfig.EXCEL2JIRA_PATH)
            dialog.Destroy

    def _openOSSVULExcel(self, event):
        wildcard = 'All files(*.*)|*.*'
        dialog = wx.FileDialog(None, 'select', os.getcwd(), '', wildcard, wx.FD_OPEN)
        if dialog.ShowModal() == wx.ID_OK:
            self._m_OSSvul_pathexcel.SetValue(dialog.GetPath())
            UserConfig.OSSVULFILE_PATH = dialog.GetPath().replace('\\', '/')
            self._addLogText(UserConfig.OSSVULFILE_PATH)
            dialog.Destroy


    def _Run(self, event):
        if '_' not in self._m_assigne.GetValue():
            self._addLogText("请输入指定用户")
            return None
        else:
            UserConfig.JIRA_ASSIGNE_VALUE = self._m_assigne.GetValue()
        if ".xlsx" not in UserConfig.OSSVULFILE_PATH:
            self._addLogText("错误的excel文件路径")
            return None
        vulinfo = FileOperation.GetVulinfo(UserConfig.OSSVULFILE_PATH)
        # self._addLogText(str(len(vulinfo)))
        # self._addLogText(str(vulinfo[0][0]))
        # self._addLogText(str(vulinfo[0][1]))
        if ".xlsx" not in UserConfig.EXCEL2JIRA_PATH:
            self._addLogText("错误的excel文件路径")
            return None
        FileOperation.writeVulinfo2JIRA(UserConfig.EXCEL2JIRA_PATH, vulinfo)
        self._addLogText("完成转换")

    def _addLogText(self, logContent):
        self._m_logText.SetValue(self._m_logText.GetValue() + '\n' + logContent)

    def _clearLogText(self):
        self._m_logText.SetValue('')

    # def _operateExcel(self, _excelPath):
    #     self._m_DoExcel = CDoExcel(_excelPath)

